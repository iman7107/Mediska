using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;


namespace Mediska.Models.Repository
{
    public class repUser
    {
        private SupportContext Context = new SupportContext();

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
        public cmplxProduct GetProductByID(int? id)
        {
            var Product = Context.MDSKGetProductList(id).DefaultIfEmpty(null).First();
            return Product;
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
        public cmplxCustomerInfoByMobile GetCustomerInfoByMobile(string mobileNo)
        {
            var U = Context.MDSKGetCustomerInfoByMobile(mobileNo).DefaultIfEmpty(null).First();
            return U;
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
        public cmplxCustomerInfoByID GetCustomerInfoByID(int? ID)
        {
            var U = Context.MDSKGetCustomerInfoByID(ID).DefaultIfEmpty(null).First();
            return U;
        }

        public List<cmplxCustomerByUserID> GetCustomerInfoByUserID(int? ID)
        {
            var U = Context.MDSKGetCustomerByUserID(ID).ToList();
            return U;
        }
        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
        public cmplxCustomerInfoByID GetCustomerInfoByAuthGUID(string guid)
        {
            var U = Context.MDSKGetCustomerInfoByAuthGUID(guid).DefaultIfEmpty(null).First();
            return U;
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
        public cmplxCustomerInfoByID GetCustomerInfoByChangePasswordGUID(string guid)
        {
            var U = Context.MDSKGetCustomerInfoByChangePassGUID(guid).DefaultIfEmpty(null).First();
            return U;
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
        public cmplxCustomerInfoByMobile RegisterUser(string mobileNo, string password, string fName, string lName, bool gender, ref string message)
        {
            try
            {
                var nc = Context.MDSKRegisterUser(mobileNo, password, fName, lName, gender).DefaultIfEmpty(null).First();
                return nc;
            }
            catch (Exception ex)
            {
                if (ex.ToString().Contains("IX_tbCustomerUser_Mobile_Unique"))
                {
                    message = "این شماره موبایل قبلا ثبت شده است";
                }
                return null;
            }
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
        public bool UpdateUserAuthCode(int? userID, string authCode, string guid)
        {
            try
            {
                Context.MDSKUpdateCustomerUserAuthCode(userID, authCode, guid);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
        public bool ActiveUser(int? id, bool active)
        {
            try
            {
                Context.MDSKChangeUserActive(id, active);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================

        public bool ChangePassword(int? ID, string password, bool? mustChange, string guid, int? StopTimeInMinute)
        {
            try
            {
                Context.MDSKChangePassword(ID, password, mustChange, guid, StopTimeInMinute);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
        public bool UpdateUserOTPCode(int? userID, string OTPcode, string guid, int? expireInMin)
        {
            try
            {
                Context.MDSKUpdateCustomerUserOTPCode(userID, OTPcode, guid, expireInMin);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================

        public cmplxCustomerInfoByID GetCustomerInfoByOTPGUID(string guid)
        {
            var U = Context.MDSKGetCustomerInfoByOTPGUID(guid).DefaultIfEmpty(null).First();
            return U;
        }

        //============================================================================================================================
        //============================================================================================================================
        //============================================================================================================================
    }
}